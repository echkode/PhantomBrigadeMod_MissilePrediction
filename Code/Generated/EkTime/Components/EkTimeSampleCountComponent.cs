namespace EchKode.PBMods.MissilePrediction.ECS
{
	//------------------------------------------------------------------------------
	// <auto-generated>
	//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
	//
	//     Changes to this file may cause incorrect behavior and will be lost if
	//     the code is regenerated.
	// </auto-generated>
	//------------------------------------------------------------------------------
	public partial class EkTimeContext
	{

		public EkTimeEntity sampleCountEntity { get { return GetGroup(EkTimeMatcher.SampleCount).GetSingleEntity(); } }
		public SampleCountComponent sampleCount { get { return sampleCountEntity.sampleCount; } }
		public bool hasSampleCount { get { return sampleCountEntity != null; } }

		public EkTimeEntity SetSampleCount(int newI)
		{
			if (hasSampleCount)
			{
				throw new Entitas.EntitasException("Could not set SampleCount!\n" + this + " already has an entity with SampleCountComponent!",
					"You should check if the context already has a sampleCountEntity before setting it or use context.ReplaceSampleCount().");
			}
			var entity = CreateEntity();
			entity.AddSampleCount(newI);
			return entity;
		}

		public void ReplaceSampleCount(int newI)
		{
			var entity = sampleCountEntity;
			if (entity == null)
			{
				entity = SetSampleCount(newI);
			}
			else
			{
				entity.ReplaceSampleCount(newI);
			}
		}

		public void RemoveSampleCount()
		{
			sampleCountEntity.Destroy();
		}
	}

	//------------------------------------------------------------------------------
	// <auto-generated>
	//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
	//
	//     Changes to this file may cause incorrect behavior and will be lost if
	//     the code is regenerated.
	// </auto-generated>
	//------------------------------------------------------------------------------
	public partial class EkTimeEntity
	{

		public SampleCountComponent sampleCount { get { return (SampleCountComponent)GetComponent(EkTimeComponentsLookup.SampleCount); } }
		public bool hasSampleCount { get { return HasComponent(EkTimeComponentsLookup.SampleCount); } }

		public void AddSampleCount(int newI)
		{
			var index = EkTimeComponentsLookup.SampleCount;
			var component = (SampleCountComponent)CreateComponent(index, typeof(SampleCountComponent));
			component.i = newI;
			AddComponent(index, component);
		}

		public void ReplaceSampleCount(int newI)
		{
			var index = EkTimeComponentsLookup.SampleCount;
			var component = (SampleCountComponent)CreateComponent(index, typeof(SampleCountComponent));
			component.i = newI;
			ReplaceComponent(index, component);
		}

		public void RemoveSampleCount()
		{
			RemoveComponent(EkTimeComponentsLookup.SampleCount);
		}
	}

	//------------------------------------------------------------------------------
	// <auto-generated>
	//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
	//
	//     Changes to this file may cause incorrect behavior and will be lost if
	//     the code is regenerated.
	// </auto-generated>
	//------------------------------------------------------------------------------
	public sealed partial class EkTimeMatcher
	{

		static Entitas.IMatcher<EkTimeEntity> _matcherSampleCount;

		public static Entitas.IMatcher<EkTimeEntity> SampleCount
		{
			get
			{
				if (_matcherSampleCount == null)
				{
					var matcher = (Entitas.Matcher<EkTimeEntity>)Entitas.Matcher<EkTimeEntity>.AllOf(EkTimeComponentsLookup.SampleCount);
					matcher.componentNames = EkTimeComponentsLookup.componentNames;
					_matcherSampleCount = matcher;
				}

				return _matcherSampleCount;
			}
		}
	}
}
