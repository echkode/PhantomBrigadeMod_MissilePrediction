namespace EchKode.PBMods.MissilePrediction.ECS
{
	//------------------------------------------------------------------------------
	// <auto-generated>
	//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
	//
	//     Changes to this file may cause incorrect behavior and will be lost if
	//     the code is regenerated.
	// </auto-generated>
	//------------------------------------------------------------------------------
	public partial class EkTimeContext
	{

		public EkTimeEntity currentTimeSliceEntity { get { return GetGroup(EkTimeMatcher.CurrentTimeSlice).GetSingleEntity(); } }
		public CurrentTimeSliceComponent currentTimeSlice { get { return currentTimeSliceEntity.currentTimeSlice; } }
		public bool hasCurrentTimeSlice { get { return currentTimeSliceEntity != null; } }

		public EkTimeEntity SetCurrentTimeSlice(int newI)
		{
			if (hasCurrentTimeSlice)
			{
				throw new Entitas.EntitasException("Could not set CurrentTimeSlice!\n" + this + " already has an entity with CurrentTimeSliceComponent!",
					"You should check if the context already has a currentTimeSliceEntity before setting it or use context.ReplaceCurrentTimeSlice().");
			}
			var entity = CreateEntity();
			entity.AddCurrentTimeSlice(newI);
			return entity;
		}

		public void ReplaceCurrentTimeSlice(int newI)
		{
			var entity = currentTimeSliceEntity;
			if (entity == null)
			{
				entity = SetCurrentTimeSlice(newI);
			}
			else
			{
				entity.ReplaceCurrentTimeSlice(newI);
			}
		}

		public void RemoveCurrentTimeSlice()
		{
			currentTimeSliceEntity.Destroy();
		}
	}

	//------------------------------------------------------------------------------
	// <auto-generated>
	//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
	//
	//     Changes to this file may cause incorrect behavior and will be lost if
	//     the code is regenerated.
	// </auto-generated>
	//------------------------------------------------------------------------------
	public partial class EkTimeEntity
	{

		public CurrentTimeSliceComponent currentTimeSlice { get { return (CurrentTimeSliceComponent)GetComponent(EkTimeComponentsLookup.CurrentTimeSlice); } }
		public bool hasCurrentTimeSlice { get { return HasComponent(EkTimeComponentsLookup.CurrentTimeSlice); } }

		public void AddCurrentTimeSlice(int newI)
		{
			var index = EkTimeComponentsLookup.CurrentTimeSlice;
			var component = (CurrentTimeSliceComponent)CreateComponent(index, typeof(CurrentTimeSliceComponent));
			component.i = newI;
			AddComponent(index, component);
		}

		public void ReplaceCurrentTimeSlice(int newI)
		{
			var index = EkTimeComponentsLookup.CurrentTimeSlice;
			var component = (CurrentTimeSliceComponent)CreateComponent(index, typeof(CurrentTimeSliceComponent));
			component.i = newI;
			ReplaceComponent(index, component);
		}

		public void RemoveCurrentTimeSlice()
		{
			RemoveComponent(EkTimeComponentsLookup.CurrentTimeSlice);
		}
	}

	//------------------------------------------------------------------------------
	// <auto-generated>
	//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
	//
	//     Changes to this file may cause incorrect behavior and will be lost if
	//     the code is regenerated.
	// </auto-generated>
	//------------------------------------------------------------------------------
	public sealed partial class EkTimeMatcher
	{

		static Entitas.IMatcher<EkTimeEntity> _matcherCurrentTimeSlice;

		public static Entitas.IMatcher<EkTimeEntity> CurrentTimeSlice
		{
			get
			{
				if (_matcherCurrentTimeSlice == null)
				{
					var matcher = (Entitas.Matcher<EkTimeEntity>)Entitas.Matcher<EkTimeEntity>.AllOf(EkTimeComponentsLookup.CurrentTimeSlice);
					matcher.componentNames = EkTimeComponentsLookup.componentNames;
					_matcherCurrentTimeSlice = matcher;
				}

				return _matcherCurrentTimeSlice;
			}
		}
	}
}
