namespace EchKode.PBMods.MissilePrediction.ECS
{
	//------------------------------------------------------------------------------
	// <auto-generated>
	//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
	//
	//     Changes to this file may cause incorrect behavior and will be lost if
	//     the code is regenerated.
	// </auto-generated>
	//------------------------------------------------------------------------------
	public partial class EkTimeContext
	{

		public EkTimeEntity timeStepEntity { get { return GetGroup(EkTimeMatcher.TimeStep).GetSingleEntity(); } }
		public TimeStepComponent timeStep { get { return timeStepEntity.timeStep; } }
		public bool hasTimeStep { get { return timeStepEntity != null; } }

		public EkTimeEntity SetTimeStep(float newF)
		{
			if (hasTimeStep)
			{
				throw new Entitas.EntitasException("Could not set TimeStep!\n" + this + " already has an entity with TimeStepComponent!",
					"You should check if the context already has a timeStepEntity before setting it or use context.ReplaceTimeStep().");
			}
			var entity = CreateEntity();
			entity.AddTimeStep(newF);
			return entity;
		}

		public void ReplaceTimeStep(float newF)
		{
			var entity = timeStepEntity;
			if (entity == null)
			{
				entity = SetTimeStep(newF);
			}
			else
			{
				entity.ReplaceTimeStep(newF);
			}
		}

		public void RemoveTimeStep()
		{
			timeStepEntity.Destroy();
		}
	}

	//------------------------------------------------------------------------------
	// <auto-generated>
	//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
	//
	//     Changes to this file may cause incorrect behavior and will be lost if
	//     the code is regenerated.
	// </auto-generated>
	//------------------------------------------------------------------------------
	public partial class EkTimeEntity
	{

		public TimeStepComponent timeStep { get { return (TimeStepComponent)GetComponent(EkTimeComponentsLookup.TimeStep); } }
		public bool hasTimeStep { get { return HasComponent(EkTimeComponentsLookup.TimeStep); } }

		public void AddTimeStep(float newF)
		{
			var index = EkTimeComponentsLookup.TimeStep;
			var component = (TimeStepComponent)CreateComponent(index, typeof(TimeStepComponent));
			component.f = newF;
			AddComponent(index, component);
		}

		public void ReplaceTimeStep(float newF)
		{
			var index = EkTimeComponentsLookup.TimeStep;
			var component = (TimeStepComponent)CreateComponent(index, typeof(TimeStepComponent));
			component.f = newF;
			ReplaceComponent(index, component);
		}

		public void RemoveTimeStep()
		{
			RemoveComponent(EkTimeComponentsLookup.TimeStep);
		}
	}

	//------------------------------------------------------------------------------
	// <auto-generated>
	//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
	//
	//     Changes to this file may cause incorrect behavior and will be lost if
	//     the code is regenerated.
	// </auto-generated>
	//------------------------------------------------------------------------------
	public sealed partial class EkTimeMatcher
	{

		static Entitas.IMatcher<EkTimeEntity> _matcherTimeStep;

		public static Entitas.IMatcher<EkTimeEntity> TimeStep
		{
			get
			{
				if (_matcherTimeStep == null)
				{
					var matcher = (Entitas.Matcher<EkTimeEntity>)Entitas.Matcher<EkTimeEntity>.AllOf(EkTimeComponentsLookup.TimeStep);
					matcher.componentNames = EkTimeComponentsLookup.componentNames;
					_matcherTimeStep = matcher;
				}

				return _matcherTimeStep;
			}
		}
	}
}
