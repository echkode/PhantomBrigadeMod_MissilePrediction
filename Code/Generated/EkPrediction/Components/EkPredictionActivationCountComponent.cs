namespace EchKode.PBMods.MissilePrediction.ECS
{
	//------------------------------------------------------------------------------
	// <auto-generated>
	//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
	//
	//     Changes to this file may cause incorrect behavior and will be lost if
	//     the code is regenerated.
	// </auto-generated>
	//------------------------------------------------------------------------------
	public partial class EkPredictionEntity
	{

		public ActivationCountComponent activationCount { get { return (ActivationCountComponent)GetComponent(EkPredictionComponentsLookup.ActivationCount); } }
		public bool hasActivationCount { get { return HasComponent(EkPredictionComponentsLookup.ActivationCount); } }

		public void AddActivationCount(int newI)
		{
			var index = EkPredictionComponentsLookup.ActivationCount;
			var component = (ActivationCountComponent)CreateComponent(index, typeof(ActivationCountComponent));
			component.i = newI;
			AddComponent(index, component);
		}

		public void ReplaceActivationCount(int newI)
		{
			var index = EkPredictionComponentsLookup.ActivationCount;
			var component = (ActivationCountComponent)CreateComponent(index, typeof(ActivationCountComponent));
			component.i = newI;
			ReplaceComponent(index, component);
		}

		public void RemoveActivationCount()
		{
			RemoveComponent(EkPredictionComponentsLookup.ActivationCount);
		}
	}

	//------------------------------------------------------------------------------
	// <auto-generated>
	//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
	//
	//     Changes to this file may cause incorrect behavior and will be lost if
	//     the code is regenerated.
	// </auto-generated>
	//------------------------------------------------------------------------------
	public sealed partial class EkPredictionMatcher
	{

		static Entitas.IMatcher<EkPredictionEntity> _matcherActivationCount;

		public static Entitas.IMatcher<EkPredictionEntity> ActivationCount
		{
			get
			{
				if (_matcherActivationCount == null)
				{
					var matcher = (Entitas.Matcher<EkPredictionEntity>)Entitas.Matcher<EkPredictionEntity>.AllOf(EkPredictionComponentsLookup.ActivationCount);
					matcher.componentNames = EkPredictionComponentsLookup.componentNames;
					_matcherActivationCount = matcher;
				}

				return _matcherActivationCount;
			}
		}
	}
}
