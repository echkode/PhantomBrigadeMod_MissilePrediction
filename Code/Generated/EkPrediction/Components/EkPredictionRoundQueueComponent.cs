namespace EchKode.PBMods.MissilePrediction.ECS
{
	//------------------------------------------------------------------------------
	// <auto-generated>
	//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
	//
	//     Changes to this file may cause incorrect behavior and will be lost if
	//     the code is regenerated.
	// </auto-generated>
	//------------------------------------------------------------------------------
	public partial class EkPredictionContext
	{

		public EkPredictionEntity roundQueueEntity { get { return GetGroup(EkPredictionMatcher.RoundQueue).GetSingleEntity(); } }
		public RoundQueueComponent roundQueue { get { return roundQueueEntity.roundQueue; } }
		public bool hasRoundQueue { get { return roundQueueEntity != null; } }

		public EkPredictionEntity SetRoundQueue(System.Collections.Generic.Queue<RoundInfo> newQ)
		{
			if (hasRoundQueue)
			{
				throw new Entitas.EntitasException("Could not set RoundQueue!\n" + this + " already has an entity with RoundQueueComponent!",
					"You should check if the context already has a roundQueueEntity before setting it or use context.ReplaceRoundQueue().");
			}
			var entity = CreateEntity();
			entity.AddRoundQueue(newQ);
			return entity;
		}

		public void ReplaceRoundQueue(System.Collections.Generic.Queue<RoundInfo> newQ)
		{
			var entity = roundQueueEntity;
			if (entity == null)
			{
				entity = SetRoundQueue(newQ);
			}
			else
			{
				entity.ReplaceRoundQueue(newQ);
			}
		}

		public void RemoveRoundQueue()
		{
			roundQueueEntity.Destroy();
		}
	}

	//------------------------------------------------------------------------------
	// <auto-generated>
	//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
	//
	//     Changes to this file may cause incorrect behavior and will be lost if
	//     the code is regenerated.
	// </auto-generated>
	//------------------------------------------------------------------------------
	public partial class EkPredictionEntity
	{

		public RoundQueueComponent roundQueue { get { return (RoundQueueComponent)GetComponent(EkPredictionComponentsLookup.RoundQueue); } }
		public bool hasRoundQueue { get { return HasComponent(EkPredictionComponentsLookup.RoundQueue); } }

		public void AddRoundQueue(System.Collections.Generic.Queue<RoundInfo> newQ)
		{
			var index = EkPredictionComponentsLookup.RoundQueue;
			var component = (RoundQueueComponent)CreateComponent(index, typeof(RoundQueueComponent));
			component.q = newQ;
			AddComponent(index, component);
		}

		public void ReplaceRoundQueue(System.Collections.Generic.Queue<RoundInfo> newQ)
		{
			var index = EkPredictionComponentsLookup.RoundQueue;
			var component = (RoundQueueComponent)CreateComponent(index, typeof(RoundQueueComponent));
			component.q = newQ;
			ReplaceComponent(index, component);
		}

		public void RemoveRoundQueue()
		{
			RemoveComponent(EkPredictionComponentsLookup.RoundQueue);
		}
	}

	//------------------------------------------------------------------------------
	// <auto-generated>
	//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
	//
	//     Changes to this file may cause incorrect behavior and will be lost if
	//     the code is regenerated.
	// </auto-generated>
	//------------------------------------------------------------------------------
	public sealed partial class EkPredictionMatcher
	{

		static Entitas.IMatcher<EkPredictionEntity> _matcherRoundQueue;

		public static Entitas.IMatcher<EkPredictionEntity> RoundQueue
		{
			get
			{
				if (_matcherRoundQueue == null)
				{
					var matcher = (Entitas.Matcher<EkPredictionEntity>)Entitas.Matcher<EkPredictionEntity>.AllOf(EkPredictionComponentsLookup.RoundQueue);
					matcher.componentNames = EkPredictionComponentsLookup.componentNames;
					_matcherRoundQueue = matcher;
				}

				return _matcherRoundQueue;
			}
		}
	}
}
