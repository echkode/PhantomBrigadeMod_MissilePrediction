namespace EchKode.PBMods.MissilePrediction.ECS
{
	//------------------------------------------------------------------------------
	// <auto-generated>
	//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
	//
	//     Changes to this file may cause incorrect behavior and will be lost if
	//     the code is regenerated.
	// </auto-generated>
	//------------------------------------------------------------------------------
	public partial class EkPredictionEntity
	{

		public AssetKeyComponent assetKey { get { return (AssetKeyComponent)GetComponent(EkPredictionComponentsLookup.AssetKey); } }
		public bool hasAssetKey { get { return HasComponent(EkPredictionComponentsLookup.AssetKey); } }

		public void AddAssetKey(string newKey)
		{
			var index = EkPredictionComponentsLookup.AssetKey;
			var component = (AssetKeyComponent)CreateComponent(index, typeof(AssetKeyComponent));
			component.key = newKey;
			AddComponent(index, component);
		}

		public void ReplaceAssetKey(string newKey)
		{
			var index = EkPredictionComponentsLookup.AssetKey;
			var component = (AssetKeyComponent)CreateComponent(index, typeof(AssetKeyComponent));
			component.key = newKey;
			ReplaceComponent(index, component);
		}

		public void RemoveAssetKey()
		{
			RemoveComponent(EkPredictionComponentsLookup.AssetKey);
		}
	}

	//------------------------------------------------------------------------------
	// <auto-generated>
	//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
	//
	//     Changes to this file may cause incorrect behavior and will be lost if
	//     the code is regenerated.
	// </auto-generated>
	//------------------------------------------------------------------------------
	public sealed partial class EkPredictionMatcher
	{

		static Entitas.IMatcher<EkPredictionEntity> _matcherAssetKey;

		public static Entitas.IMatcher<EkPredictionEntity> AssetKey
		{
			get
			{
				if (_matcherAssetKey == null)
				{
					var matcher = (Entitas.Matcher<EkPredictionEntity>)Entitas.Matcher<EkPredictionEntity>.AllOf(EkPredictionComponentsLookup.AssetKey);
					matcher.componentNames = EkPredictionComponentsLookup.componentNames;
					_matcherAssetKey = matcher;
				}

				return _matcherAssetKey;
			}
		}
	}
}
